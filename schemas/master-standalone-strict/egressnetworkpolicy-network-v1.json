{
  "description": "EgressNetworkPolicy describes the current egress network policy for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin, traffic from a pod to an IP address outside the cluster will be checked against each EgressNetworkPolicyRule in the pod's namespace's EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy is present) then the traffic will be allowed by default.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "network.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "EgressNetworkPolicy"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "spec is the specification of the current egress network policy",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "egress"
      ],
      "properties": {
        "egress": {
          "description": "egress contains the list of egress policy rules",
          "type": "array",
          "maxItems": 1000,
          "items": {
            "description": "EgressNetworkPolicyRule contains a single egress network policy rule",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "to",
              "type"
            ],
            "properties": {
              "to": {
                "description": "to is the target that traffic is allowed/denied to",
                "type": "object",
                "maxProperties": 1,
                "minProperties": 1,
                "properties": {
                  "cidrSelector": {
                    "description": "cidrSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset",
                    "type": [
                      "string",
                      "null"
                    ],
                    "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$"
                  },
                  "dnsName": {
                    "description": "dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset",
                    "type": [
                      "string",
                      "null"
                    ],
                    "pattern": "^([A-Za-z0-9-]+\\.)*[A-Za-z0-9-]+\\.?$"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "type marks this as an \"Allow\" or \"Deny\" rule",
                "type": "string",
                "pattern": "^Allow|Deny$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "network.openshift.io",
      "kind": "EgressNetworkPolicy",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}