{
  "description": "Schema for the tektonconfigs API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "operator.tekton.dev/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "TektonConfig"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "Spec defines the desired state of TektonConfig",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "addon": {
          "description": "defines fields to customize installation of addon components",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "params": {
              "description": "list of params to customize installation of addon components",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "name of param",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "value": {
                    "description": "value of param",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "pipeline": {
          "description": "defines fields to customize installation of pipeline components",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "params": {
              "description": "list of params to customize installation of pipeline components",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "name of param",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "value": {
                    "description": "value of param",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "profile": {
          "description": "based on the type of profile where tekton components will be installed",
          "type": [
            "string",
            "null"
          ]
        },
        "pruner": {
          "description": "this enables to prune pipelinerun/taskrun",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "keep": {
              "description": "number of resources to keep",
              "type": [
                "integer",
                "null"
              ]
            },
            "resources": {
              "description": "list of resources which needs to be pruned",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "schedule": {
              "description": "schedule cronjob",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "targetNamespace": {
          "description": "namespace where tekton components will be installed",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of TektonConfig",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "The latest available observations of a resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type",
              "status"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "manifests": {
          "description": "The list of tektonconfig manifests, which have been installed by the operator",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "observedGeneration": {
          "description": "The generation last processed by the controller",
          "type": [
            "integer",
            "null"
          ]
        },
        "version": {
          "description": "The version of the installed release",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "operator.tekton.dev",
      "kind": "TektonConfig",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
