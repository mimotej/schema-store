{
  "description": "ReplicationSource defines the source for a replicated volume",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "volsync.backube/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ReplicationSource"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "spec is the desired state of the ReplicationSource, including the replication method to use and its configuration.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "external": {
          "description": "external defines the configuration when using an external replication provider.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "parameters": {
              "description": "parameters are provider-specific key/value configuration parameters. For more information, please see the documentation of the specific replication provider being used.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "provider": {
              "description": "provider is the name of the external replication provider. The name should be of the form: domain.com/provider.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "paused": {
          "description": "paused can be used to temporarily stop replication. Defaults to \"false\".",
          "type": [
            "boolean",
            "null"
          ]
        },
        "rclone": {
          "description": "rclone defines the configuration when using Rclone-based replication.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "accessModes": {
              "description": "accessModes can be used to override the accessModes of the PiT image.",
              "type": [
                "array",
                "null"
              ],
              "minItems": 1,
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "capacity": {
              "description": "capacity can be used to override the capacity of the PiT image.",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "copyMethod": {
              "description": "copyMethod describes how a point-in-time (PiT) image of the source volume should be created.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "None",
                "Clone",
                "Snapshot"
              ]
            },
            "rcloneConfig": {
              "description": "RcloneConfig is the rclone secret name",
              "type": [
                "string",
                "null"
              ]
            },
            "rcloneConfigSection": {
              "description": "RcloneConfigSection is the section in rclone_config file to use for the current job.",
              "type": [
                "string",
                "null"
              ]
            },
            "rcloneDestPath": {
              "description": "RcloneDestPath is the remote path to sync to.",
              "type": [
                "string",
                "null"
              ]
            },
            "storageClassName": {
              "description": "storageClassName can be used to override the StorageClass of the PiT image.",
              "type": [
                "string",
                "null"
              ]
            },
            "volumeSnapshotClassName": {
              "description": "volumeSnapshotClassName can be used to specify the VSC to be used if copyMethod is Snapshot. If not set, the default VSC is used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "restic": {
          "description": "restic defines the configuration when using Restic-based replication.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "accessModes": {
              "description": "accessModes can be used to override the accessModes of the PiT image.",
              "type": [
                "array",
                "null"
              ],
              "minItems": 1,
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "cacheAccessModes": {
              "description": "accessModes can be used to set the accessModes of restic metadata cache volume",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "cacheCapacity": {
              "description": "cacheCapacity can be used to set the size of the restic metadata cache volume",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "cacheStorageClassName": {
              "description": "cacheStorageClassName can be used to set the StorageClass of the restic metadata cache volume",
              "type": [
                "string",
                "null"
              ]
            },
            "capacity": {
              "description": "capacity can be used to override the capacity of the PiT image.",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "copyMethod": {
              "description": "copyMethod describes how a point-in-time (PiT) image of the source volume should be created.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "None",
                "Clone",
                "Snapshot"
              ]
            },
            "pruneIntervalDays": {
              "description": "PruneIntervalDays define how often to prune the repository",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "repository": {
              "description": "Repository is the secret name containing repository info",
              "type": [
                "string",
                "null"
              ]
            },
            "retain": {
              "description": "ResticRetainPolicy define the retain policy",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "daily": {
                  "description": "Daily defines the number of snapshots to be kept daily",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "hourly": {
                  "description": "Hourly defines the number of snapshots to be kept hourly",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "monthly": {
                  "description": "Monthly defines the number of snapshots to be kept monthly",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "weekly": {
                  "description": "Weekly defines the number of snapshots to be kept weekly",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "within": {
                  "description": "Within defines the number of snapshots to be kept Within the given time period",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "yearly": {
                  "description": "Yearly defines the number of snapshots to be kept yearly",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "storageClassName": {
              "description": "storageClassName can be used to override the StorageClass of the PiT image.",
              "type": [
                "string",
                "null"
              ]
            },
            "volumeSnapshotClassName": {
              "description": "volumeSnapshotClassName can be used to specify the VSC to be used if copyMethod is Snapshot. If not set, the default VSC is used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "rsync": {
          "description": "rsync defines the configuration when using Rsync-based replication.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "accessModes": {
              "description": "accessModes can be used to override the accessModes of the PiT image.",
              "type": [
                "array",
                "null"
              ],
              "minItems": 1,
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "address": {
              "description": "address is the remote address to connect to for replication.",
              "type": [
                "string",
                "null"
              ]
            },
            "capacity": {
              "description": "capacity can be used to override the capacity of the PiT image.",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "copyMethod": {
              "description": "copyMethod describes how a point-in-time (PiT) image of the source volume should be created.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "None",
                "Clone",
                "Snapshot"
              ]
            },
            "path": {
              "description": "path is the remote path to rsync to. Defaults to \"/\"",
              "type": [
                "string",
                "null"
              ]
            },
            "port": {
              "description": "port is the SSH port to connect to for replication. Defaults to 22.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "maximum": 65535,
              "minimum": 0
            },
            "serviceType": {
              "description": "serviceType determines the Service type that will be created for incoming SSH connections.",
              "type": [
                "string",
                "null"
              ]
            },
            "sshKeys": {
              "description": "sshKeys is the name of a Secret that contains the SSH keys to be used for authentication. If not provided, the keys will be generated.",
              "type": [
                "string",
                "null"
              ]
            },
            "sshUser": {
              "description": "sshUser is the username for outgoing SSH connections. Defaults to \"root\".",
              "type": [
                "string",
                "null"
              ]
            },
            "storageClassName": {
              "description": "storageClassName can be used to override the StorageClass of the PiT image.",
              "type": [
                "string",
                "null"
              ]
            },
            "volumeSnapshotClassName": {
              "description": "volumeSnapshotClassName can be used to specify the VSC to be used if copyMethod is Snapshot. If not set, the default VSC is used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "sourcePVC": {
          "description": "sourcePVC is the name of the PersistentVolumeClaim (PVC) to replicate.",
          "type": [
            "string",
            "null"
          ]
        },
        "trigger": {
          "description": "trigger determines when the latest state of the volume will be captured (and potentially replicated to the destination).",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "manual": {
              "description": "manual is a string value that schedules a manual trigger. Once a sync completes then status.lastManualSync is set to the same string value. A consumer of a manual trigger should set spec.trigger.manual to a known value and then wait for lastManualSync to be updated by the operator to the same value, which means that the manual trigger will then pause and wait for further updates to the trigger.",
              "type": [
                "string",
                "null"
              ]
            },
            "schedule": {
              "description": "schedule is a cronspec (https://en.wikipedia.org/wiki/Cron#Overview) that can be used to schedule replication to occur at regular, time-based intervals.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^(\\d+|\\*)(/\\d+)?(\\s+(\\d+|\\*)(/\\d+)?){4}$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "status is the observed state of the ReplicationSource as determined by the controller.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "conditions represent the latest available observations of the source's state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "external": {
          "description": "external contains provider-specific status information. For more details, please see the documentation of the specific replication provider being used.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "lastManualSync": {
          "description": "lastManualSync is set to the last spec.trigger.manual when the manual sync is done.",
          "type": [
            "string",
            "null"
          ]
        },
        "lastSyncDuration": {
          "description": "lastSyncDuration is the amount of time required to send the most recent update.",
          "type": [
            "string",
            "null"
          ]
        },
        "lastSyncTime": {
          "description": "lastSyncTime is the time of the most recent successful synchronization.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "nextSyncTime": {
          "description": "nextSyncTime is the time when the next volume synchronization is scheduled to start (for schedule-based synchronization).",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "restic": {
          "description": "restic contains status information for Restic-based replication.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "lastPruned": {
              "description": "lastPruned in the object holding the time of last pruned",
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "rsync": {
          "description": "rsync contains status information for Rsync-based replication.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "address": {
              "description": "address is the address to connect to for incoming SSH replication connections.",
              "type": [
                "string",
                "null"
              ]
            },
            "port": {
              "description": "port is the SSH port to connect to for incoming SSH replication connections.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "sshKeys": {
              "description": "sshKeys is the name of a Secret that contains the SSH keys to be used for authentication. If not provided in .spec.rsync.sshKeys, SSH keys will be generated and the appropriate keys for the remote side will be placed here.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "volsync.backube",
      "kind": "ReplicationSource",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}